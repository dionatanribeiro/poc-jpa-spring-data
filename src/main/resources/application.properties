spring.application.name=lua-azul

# ===============================
# = DATA SOURCE
# ===============================
## Set here configurations for the database connection
#spring.datasource.url=jdbc:postgresql://localhost:5432/locadora
#spring.datasource.username=admin
#spring.datasource.password=123
#spring.datasource.driver-class-name=org.postgresql.Driver
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
## ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.h2.console.enabled=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create

## Trata problema de verificacao no m√©todo "org.postgresql.jdbc.PgConnection.createClob()" no driver do PostgreSQL
## https://stackoverflow.com/questions/10075081/hibernate-slow-to-acquire-postgres-connection
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect